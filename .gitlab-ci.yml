stages:
  - test
  - build
  - deploy

# 1. Тестовый шаг: проверим Node.js код
test-job:
  stage: test
  image: node:20
  script:
    - echo "Устанавливаем зависимости..."
    - npm install
    - echo "Проверяем, что проект собирается"
    - npm run build || echo "Временная проверка — билд пока не обязателен"
  rules:
    - changes:
        - app/**/*
        - package.json
        - package-lock.json
        - .gitlab-ci.yml
    - when: never

# 2. Сборка Docker-образов
docker-build:
  stage: build
  image: docker:20.10
  services:
    - docker:dind
  script:
    - echo "Собираем Docker-образы..."
    - docker compose build
  rules:
    - changes:
        - Dockerfile
        - docker-compose.yml
        - grafana/**/*
        - telegraf/**/*
        - app/**/*

# 3. Деплой на локальный сервер (через SSH)
deploy-job:
  stage: deploy
  image: alpine:3.20
  before_script:
    - apk add --no-cache openssh-client
    - eval "$(ssh-agent -s)"
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh && printf "Host *\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
  script:
    - ssh $SSH_USER@$SSH_HOST "cd /path/to/project && git pull && docker compose up -d"
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
