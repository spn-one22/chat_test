<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
    </TestPlan>
    <hashTree>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - user" enabled="false">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">C:/Users/spn-o/OneDrive/Рабочий стол/chat_test/JMeter_Projects/CSV_FILES/jmeter_db_test.csv</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">user_name,password,role,waterMark</stringProp>
      </CSVDataSet>
      <hashTree/>
      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config - messages" enabled="false">
        <stringProp name="filename">C:/Users/spn-o/OneDrive/Рабочий стол/chat_test/JMeter_Projects/CSV_FILES/messages.csv</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="variableNames">message</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <stringProp name="delimiter">,</stringProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
      </CSVDataSet>
      <hashTree/>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="JDBC Connection Configuration dbConn" enabled="false">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">SELECT 1;</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="connectionProperties">useUnicode=true;characterEncoding=UTF-8</stringProp>
        <stringProp name="dataSource">dbConn</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://localhost:3307/messenger?useSSL=false&amp;serverTimezone=UTC</stringProp>
        <stringProp name="driver">com.mysql.cj.jdbc.Driver</stringProp>
        <stringProp name="initQuery"></stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">appsecret</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <boolProp name="preinit">false</boolProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">appuser</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group - CREATE USER" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <OnceOnlyController guiclass="OnceOnlyControllerGui" testclass="OnceOnlyController" testname="TX-Create user = jmeter (once only)"/>
        <hashTree>
          <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="JSR223 - hash password">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">import org.mindrot.jbcrypt.BCrypt

// Исходный пароль
def plainPassword = &quot;${password}&quot;

// Генерация bcrypt
def hashedPassword = BCrypt.hashpw(plainPassword, BCrypt.gensalt(10))

// Лог для проверки
log.info(&quot;Hashed password: &quot; + hashedPassword)

// Сохраняем хеш в переменную JMeter
vars.put(&quot;hashedPassword&quot;, hashedPassword)
</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223Sampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request create user = jmeter">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">INSERT INTO users (login, `password`, role, createdAt)
SELECT &quot;${user_name}&quot;, &quot;${hashedPassword}&quot;, &quot;${role}&quot;, now()
WHERE NOT EXISTS (
	SELECT 1 FROM users
	WHERE login = &quot;${user_name}&quot;);</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group (debug)" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TX-Write test message" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request take id">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id
FROM users
WHERE login = &quot;${user_name}&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">jmeter_id</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request Write message">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="query">INSERT INTO messages (`text`, createdAt, userId)
SELECT CONCAT(?, &quot; ${message}&quot;), NOW(), ?</stringProp>
            <stringProp name="queryArguments">${waterMark},${jmeter_id_1}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR,INTEGER</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Prepared Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable">dbResult</stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TX-Read Messages" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request Read Messages">
          <stringProp name="dataSource">dbConn</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT * FROM messages
WHERE userId IN (
	SELECT id
	FROM users
	WHERE login &lt;&gt; &quot;${user_name}&quot;)
LIMIT 20;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetMaxRows"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="false">
          <collectionProp name="load_profile">
            <collectionProp name="1873282797">
              <stringProp name="48">0</stringProp>
              <stringProp name="1567">10</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1567950124">
              <stringProp name="1567">10</stringProp>
              <stringProp name="1567">10</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-241879092">
              <stringProp name="1567">10</stringProp>
              <stringProp name="1598">20</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1571431052">
              <stringProp name="1598">20</stringProp>
              <stringProp name="1598">20</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-237651467">
              <stringProp name="1598">20</stringProp>
              <stringProp name="1629">30</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1598806284">
              <stringProp name="1629">30</stringProp>
              <stringProp name="1629">30</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-210998845">
              <stringProp name="1629">30</stringProp>
              <stringProp name="1660">40</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1603057996">
              <stringProp name="1660">40</stringProp>
              <stringProp name="1660">40</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-206771220">
              <stringProp name="1660">40</stringProp>
              <stringProp name="1691">50</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1606538924">
              <stringProp name="1691">50</stringProp>
              <stringProp name="1691">50</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-202543595">
              <stringProp name="1691">50</stringProp>
              <stringProp name="1722">60</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1633914156">
              <stringProp name="1722">60</stringProp>
              <stringProp name="1722">60</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-175915060">
              <stringProp name="1722">60</stringProp>
              <stringProp name="1753">70</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1637395084">
              <stringProp name="1753">70</stringProp>
              <stringProp name="1753">70</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-172434132">
              <stringProp name="1753">70</stringProp>
              <stringProp name="1784">80</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1640876012">
              <stringProp name="1784">80</stringProp>
              <stringProp name="1784">80</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-168206507">
              <stringProp name="1784">80</stringProp>
              <stringProp name="1815">90</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="1668251244">
              <stringProp name="1815">90</stringProp>
              <stringProp name="1815">90</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="-655301003">
              <stringProp name="1815">90</stringProp>
              <stringProp name="48625">100</stringProp>
              <stringProp name="1629">30</stringProp>
            </collectionProp>
            <collectionProp name="-1882502932">
              <stringProp name="48625">100</stringProp>
              <stringProp name="48625">100</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
            <collectionProp name="1190063426">
              <stringProp name="48625">100</stringProp>
              <stringProp name="48">0</stringProp>
              <stringProp name="50547">300</stringProp>
            </collectionProp>
          </collectionProp>
        </kg.apc.jmeter.timers.VariableThroughputTimer>
        <hashTree/>
      </hashTree>
      <kg.apc.jmeter.threads.SteppingThreadGroup guiclass="kg.apc.jmeter.threads.SteppingThreadGroupGui" testclass="kg.apc.jmeter.threads.SteppingThreadGroup" testname="jp@gc - Stepping Thread Group" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <stringProp name="ThreadGroup.num_threads">100</stringProp>
        <stringProp name="Threads initial delay">0</stringProp>
        <stringProp name="Start users count">10</stringProp>
        <stringProp name="Start users count burst">0</stringProp>
        <stringProp name="Start users period">100</stringProp>
        <stringProp name="Stop users count">1</stringProp>
        <stringProp name="Stop users period">1</stringProp>
        <stringProp name="flighttime">120</stringProp>
        <stringProp name="rampUp">15</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <intProp name="LoopController.loops">-1</intProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </kg.apc.jmeter.threads.SteppingThreadGroup>
      <hashTree>
        <GaussianRandomTimer guiclass="GaussianRandomTimerGui" testclass="GaussianRandomTimer" testname="Gaussian Random Timer" enabled="true">
          <stringProp name="ConstantTimer.delay">1000</stringProp>
          <stringProp name="RandomTimer.range">100.0</stringProp>
        </GaussianRandomTimer>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TX-Read Messages" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request Read Messages" enabled="true">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT * FROM messages
WHERE userId IN (
	SELECT id
	FROM users
	WHERE login &lt;&gt; &quot;${user_name}&quot;)
LIMIT 20;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TX-Write test message" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request take id" enabled="true">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="queryType">Select Statement</stringProp>
            <stringProp name="query">SELECT id
FROM users
WHERE login = &quot;${user_name}&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames">jmeter_id</stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request message" enabled="true">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="query">INSERT INTO messages (`text`, createdAt, userId)
SELECT CONCAT(?, &quot; ${message}&quot;), NOW(), ?</stringProp>
            <stringProp name="queryArguments">${waterMark},${jmeter_id_1}</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR,INTEGER</stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="queryType">Prepared Update Statement</stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultVariable">dbResult</stringProp>
            <stringProp name="variableNames"></stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <kg.apc.jmeter.timers.VariableThroughputTimer guiclass="kg.apc.jmeter.timers.VariableThroughputTimerGui" testclass="kg.apc.jmeter.timers.VariableThroughputTimer" testname="jp@gc - Throughput Shaping Timer" enabled="false">
        <collectionProp name="load_profile">
          <collectionProp name="1873282797">
            <stringProp name="48">0</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1567950124">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1567">10</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-241879092">
            <stringProp name="1567">10</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1571431052">
            <stringProp name="1598">20</stringProp>
            <stringProp name="1598">20</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-237651467">
            <stringProp name="1598">20</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1598806284">
            <stringProp name="1629">30</stringProp>
            <stringProp name="1629">30</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-210998845">
            <stringProp name="1629">30</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1603057996">
            <stringProp name="1660">40</stringProp>
            <stringProp name="1660">40</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-206771220">
            <stringProp name="1660">40</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1606538924">
            <stringProp name="1691">50</stringProp>
            <stringProp name="1691">50</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-202543595">
            <stringProp name="1691">50</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1633914156">
            <stringProp name="1722">60</stringProp>
            <stringProp name="1722">60</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-175915060">
            <stringProp name="1722">60</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1637395084">
            <stringProp name="1753">70</stringProp>
            <stringProp name="1753">70</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-172434132">
            <stringProp name="1753">70</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1640876012">
            <stringProp name="1784">80</stringProp>
            <stringProp name="1784">80</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-168206507">
            <stringProp name="1784">80</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="1668251244">
            <stringProp name="1815">90</stringProp>
            <stringProp name="1815">90</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="-655301003">
            <stringProp name="1815">90</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="1629">30</stringProp>
          </collectionProp>
          <collectionProp name="-1882502932">
            <stringProp name="48625">100</stringProp>
            <stringProp name="48625">100</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
          <collectionProp name="1190063426">
            <stringProp name="48625">100</stringProp>
            <stringProp name="48">0</stringProp>
            <stringProp name="50547">300</stringProp>
          </collectionProp>
        </collectionProp>
      </kg.apc.jmeter.timers.VariableThroughputTimer>
      <hashTree/>
      <PostThreadGroup guiclass="PostThreadGroupGui" testclass="PostThreadGroup" testname="tearDown Thread Group" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </PostThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="TX-DELETE test messages/jmeter " enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request DELETE Messages" enabled="true">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="queryType">Prepared Update Statement</stringProp>
            <stringProp name="query">DELETE FROM messages
WHERE `text` LIKE ? AND userId = (
SELECT id
FROM users
WHERE login = &apos;${user_name}&apos;);
</stringProp>
            <stringProp name="queryArguments">%${waterMark}%</stringProp>
            <stringProp name="queryArgumentsTypes">VARCHAR</stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
          <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="JDBC Request Delete User" enabled="true">
            <stringProp name="dataSource">dbConn</stringProp>
            <stringProp name="queryType">Update Statement</stringProp>
            <stringProp name="query">DELETE FROM users
WHERE login = &quot;${user_name}&quot;;</stringProp>
            <stringProp name="queryArguments"></stringProp>
            <stringProp name="queryArgumentsTypes"></stringProp>
            <stringProp name="variableNames"></stringProp>
            <stringProp name="resultVariable"></stringProp>
            <stringProp name="queryTimeout"></stringProp>
            <stringProp name="resultSetMaxRows"></stringProp>
            <stringProp name="resultSetHandler">Store as String</stringProp>
          </JDBCSampler>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener" enabled="true">
        <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments">
          <collectionProp name="Arguments.arguments">
            <elementProp name="influxdbMetricsSender" elementType="Argument">
              <stringProp name="Argument.name">influxdbMetricsSender</stringProp>
              <stringProp name="Argument.value">org.apache.jmeter.visualizers.backend.influxdb.HttpMetricsSender</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="influxdbUrl" elementType="Argument">
              <stringProp name="Argument.name">influxdbUrl</stringProp>
              <stringProp name="Argument.value">http://localhost:8086/write?db=chat_test_jmeter&amp;u=jmeter_user&amp;p=jmeter_pass</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="application" elementType="Argument">
              <stringProp name="Argument.name">application</stringProp>
              <stringProp name="Argument.value">chat_test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="measurement" elementType="Argument">
              <stringProp name="Argument.name">measurement</stringProp>
              <stringProp name="Argument.value">jmeter</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="summaryOnly" elementType="Argument">
              <stringProp name="Argument.name">summaryOnly</stringProp>
              <stringProp name="Argument.value">false</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="samplersRegex" elementType="Argument">
              <stringProp name="Argument.name">samplersRegex</stringProp>
              <stringProp name="Argument.value">.*</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="percentiles" elementType="Argument">
              <stringProp name="Argument.name">percentiles</stringProp>
              <stringProp name="Argument.value">90;95;99</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="testTitle" elementType="Argument">
              <stringProp name="Argument.name">testTitle</stringProp>
              <stringProp name="Argument.value">jdbc_test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="eventTags" elementType="Argument">
              <stringProp name="Argument.name">eventTags</stringProp>
              <stringProp name="Argument.value"></stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </elementProp>
        <stringProp name="classname">org.apache.jmeter.visualizers.backend.influxdb.InfluxdbBackendListenerClient</stringProp>
      </BackendListener>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="HTTP Request">
          <stringProp name="HTTPSampler.domain">localhost</stringProp>
          <stringProp name="HTTPSampler.port">8090</stringProp>
          <stringProp name="HTTPSampler.path">/api/admin/users</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Authorization</stringProp>
                <stringProp name="Header.value">Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwibG9naW4iOiJhZG1pbiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTc1OTkyMTc4NCwiZXhwIjoxNzYwMDA4MTg0fQ.9rTL_1D9hOO0G-hxX-ahhtnqDKc6t7ZSxNfMrF3R564</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
